ES6 (ECMAScript 2015):

ES6 is a significant update to the JavaScript language that introduced many new features and improvements. 
Some notable features introduced in ES6 include let and const for variable declarations, arrow functions, classes, template literals, 
destructuring, and the import and export statements for module handling. ES6 made JavaScript more powerful and readable, and it's widely 
supported in modern browsers and environments.

ES7 (ECMAScript 2016):

ES7, or ECMAScript 2016, was a much smaller update compared to ES6. It introduced only a few new features, 
with the most notable being the exponentiation operator (**) for calculating exponentials. 
ES7 didn't have as significant an impact on the language as ES6 did.

ES8 (ECMAScript 2017):

ES8 introduced several new features, including async and await for handling asynchronous code in a more synchronous style, 
the Object.values() and Object.entries() methods for working with objects, and improvements to regular expressions.

ES9 (ECMAScript 2018):

ES9 brought additional features such as asynchronous iterators, rest/spread properties in objects, 
and improvements to regular expressions.

ES10 (ECMAScript 2019):

ES10, introduced features like Array.prototype.flat(), Array.prototype.flatMap(), the String.prototype.trimStart() and String.prototype.trimEnd() 
methods, optional catch binding, and other improvements.

ES11 (ECMAScript 2020):

ES11 introduced features like the nullish coalescing operator (??), the optional chaining operator (?.), 
the BigInt data type for working with arbitrarily large integers, and other enhancements.

ES12 (ECMAScript 2021):

ES12 added features like the String.prototype.replaceAll() method, the Promise.any() method for handling promises, and 
new logical assignment operators (&&=, ||=, and ??=).







